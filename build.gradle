/*
 * Copyright (c) 2019, Mercenary Creators Company. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.50'
    id 'com.gorylenko.gradle-git-properties' version '2.1.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'co.mercenary-creators'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

ext {
    set('JACKSON_DATA_BIND_VERSION', '2.10.0')
    set('MERCENARY_CREATORS_BOOT_VERSION', '8.6.0-SNAPSHOT')
    set('DATALAKE_CLUSTERS_UI_VERSION', '8.6.0-SNAPSHOT')
}

dependencies {
    implementation(group: 'co.mercenary-creators', name: 'datalake-clusters-ui', version: DATALAKE_CLUSTERS_UI_VERSION)
    implementation(group: 'co.mercenary-creators', name: 'mercenary-creators-kotlin-boot', version: MERCENARY_CREATORS_BOOT_VERSION)
    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: JACKSON_DATA_BIND_VERSION) {
        exclude(group: 'org.jetbrains.kotlin')
    }
    implementation(group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: JACKSON_DATA_BIND_VERSION)
    implementation(group: 'org.apache.commons', name: 'commons-pool2', version: '2.6.2')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
    implementation group: 'com.intellij', name: 'annotations', version: '12.0'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2')
    testRuntime(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2')
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

bootJar.dependsOn(generateGitProperties)

springBoot {
    buildInfo()
}